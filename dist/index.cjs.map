{"version":3,"file":"index.cjs","sources":["../src/core/parse.ts","../src/middleware/index.ts","../src/core/errors.ts","../src/core/shape.ts","../src/core/filter-order.ts","../src/core/serialize.ts"],"sourcesContent":["import type { ODataQueryOptions } from \"./types\";\n\nexport function parseODataQuery(query: Record<string, string | undefined>): ODataQueryOptions {\n  const opts: ODataQueryOptions = {};\n  const sel = query[\"$select\"];\n  if (sel) opts.select = sel.split(\",\").map((s) => s.trim()).filter(Boolean);\n  const orderby = query[\"$orderby\"];\n  if (orderby) {\n    opts.orderby = orderby.split(\",\").map((term) => {\n      const [prop, dir] = term.trim().split(/\\s+/);\n      return { property: prop, direction: (dir?.toLowerCase() === \"desc\" ? \"desc\" : \"asc\") };\n    });\n  }\n  const top = query[\"$top\"];\n  if (top !== undefined) opts.top = Math.max(0, Number(top));\n  const skip = query[\"$skip\"];\n  if (skip !== undefined) opts.skip = Math.max(0, Number(skip));\n  const count = query[\"$count\"];\n  if (count !== undefined) opts.count = String(count).toLowerCase() === \"true\";\n  const filter = query[\"$filter\"];\n  if (filter) opts.filter = filter;\n  const expand = query[\"$expand\"];\n  if (expand) {\n    opts.expand = Object.fromEntries(expand.split(\",\").map((e) => [e.trim(), {}]));\n  }\n  return opts;\n}\n","import type { MiddlewareObj } from \"@middy/core\";\nimport type { ODataRequestContext, ODataQueryOptions, EdmModel } from \"../core/types\";\nimport { parseODataQuery } from \"../core/parse\";\n\nexport interface ODataMiddlewareOptions {\n  model: EdmModel;\n  serviceRoot: string | ((event: any) => string);\n  enable?: {\n    compute?: boolean;\n    apply?: boolean;\n    search?: boolean;\n  };\n  defaults?: {\n    maxTop?: number;\n    defaultTop?: number;\n  };\n}\n\nexport function odata(options: ODataMiddlewareOptions): MiddlewareObj {\n  return {\n    before: async (request: any) => {\n      const event = request.event ?? {};\n      const query = event.rawQueryString\n        ? Object.fromEntries(new URLSearchParams(event.rawQueryString))\n        : (event.queryStringParameters || {});\n      const opts: ODataQueryOptions = parseODataQuery(query);\n      const serviceRoot = typeof options.serviceRoot === \"function\" ? options.serviceRoot(event) : options.serviceRoot;\n      const ctx: ODataRequestContext = {\n        model: options.model,\n        serviceRoot,\n        entitySet: undefined,\n        options: opts,\n      };\n      request.internal = request.internal || {};\n      request.internal.odata = ctx;\n    },\n  };\n}\n","import type { ODataErrorPayload } from \"./types\";\n\nexport class ODataBadRequest extends Error {\n  statusCode = 400;\n  code = \"BadRequest\";\n}\n\nexport class ODataInternalServerError extends Error {\n  statusCode = 500;\n  code = \"InternalServerError\";\n}\n\nexport function toODataError(err: unknown, message?: string): ODataErrorPayload {\n  if (err && typeof err === \"object\" && \"statusCode\" in err && \"message\" in err) {\n    const e = err as any;\n    return { error: { code: e.code ?? String(e.statusCode), message: e.message } };\n  }\n  return { error: { code: \"InternalServerError\", message: message ?? \"An error occurred\" } };\n}\n","import type { ODataEntity, ODataQueryOptions } from \"./types\";\n\nexport function applySelect<T extends ODataEntity>(row: T, select?: string[]): Partial<T> {\n  if (!select || select.length === 0) return { ...row };\n  const out: Record<string, unknown> = {};\n  for (const p of select) if (p in row) out[p] = (row as any)[p];\n  return out as Partial<T>;\n}\n\nexport function projectArray<T extends ODataEntity>(rows: T[], options: ODataQueryOptions): Partial<T>[] {\n  return rows.map((r) => applySelect(r, options.select));\n}\n","import type { ODataEntity, ODataQueryOptions } from \"./types\";\n\nexport function filterArray<T extends ODataEntity>(rows: T[], options: ODataQueryOptions): T[] {\n  if (!options.filter) return rows;\n  // Placeholder: filtering to be implemented via tests.\n  return rows;\n}\n\nexport function orderArray<T extends ODataEntity>(rows: T[], options: ODataQueryOptions): T[] {\n  if (!options.orderby || options.orderby.length === 0) return rows;\n  const copy = [...rows];\n  copy.sort((a, b) => {\n    for (const term of options.orderby!) {\n      const av = (a as any)[term.property];\n      const bv = (b as any)[term.property];\n      if (av == null && bv == null) continue;\n      if (av == null) return term.direction === \"asc\" ? -1 : 1;\n      if (bv == null) return term.direction === \"asc\" ? 1 : -1;\n      if (av < bv) return term.direction === \"asc\" ? -1 : 1;\n      if (av > bv) return term.direction === \"asc\" ? 1 : -1;\n    }\n    return 0;\n  });\n  return copy;\n}\n\nexport function paginateArray<T>(rows: T[], options: ODataQueryOptions): T[] {\n  const skip = options.skip ?? 0;\n  const top = options.top ?? rows.length;\n  return rows.slice(skip, skip + top);\n}\n","import type { ODataCollectionResponse } from \"./types\";\n\nexport function serializeCollection<T>(contextUrl: string, value: T[], count?: number, nextLink?: string): ODataCollectionResponse<T> {\n  const out: ODataCollectionResponse<T> = {\n    \"@odata.context\": contextUrl,\n    value,\n  };\n  if (typeof count === \"number\") out[\"@odata.count\"] = count;\n  if (nextLink) out[\"@odata.nextLink\"] = nextLink;\n  return out;\n}\n"],"names":["parseODataQuery","query","opts","sel","orderby","term","prop","dir","top","skip","count","filter","expand","e","odata","options","request","event","serviceRoot","ctx","ODataBadRequest","__publicField","ODataInternalServerError","toODataError","err","message","applySelect","row","select","out","p","projectArray","rows","r","filterArray","orderArray","copy","a","b","av","bv","paginateArray","serializeCollection","contextUrl","value","nextLink"],"mappings":"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"}